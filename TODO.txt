- Есть проблема с возвратом средств за услуги при стандарной логике расчёта. Если услуга
стоила 10 и абонент её купил. А потом эта услуга стала 100, и абонент досрочно завершил
её, то перерасчёт будет идти по новой стоимости услуги. Т.е. вернётся остаток по
стоимости 100, больше чем человек заплатил за услугу. Надо или сделать стоимость не изменной,
или запоминать за сколько человек купил услугу и по это цене делать перерасчёт
+ Вываливается ошибка 500 когда пытаемся зайти по логину и паролю абонента
  Надо для rest_framework реализовать логику авторизации

- Добавить предзаказ услуги: Чтоб можно было выбрать какая услуга продлится на след раз
- В устройствах указывать в какой порт включено устройство, вверх и вниз.
- Есть проблема что на каждый выделенный ip назначается полная скорость учётки. т.е. если на учётке 3 ip
  и услуга на 100m/bit то на каждый Ip выйдет по 100 m/bit.
+ Добавить лог завершения задачи в комментарий, т.е. кто нажал кнопку завершения задачи.
-? Добавить сортировку по характеру подключки чтоб были видны подключки
+ В исполнителей добавлять только активных пользователей
+ Лог изменений ответственных задачи
- Описать типизацию для проекта
- Добавить просмотр и редактирование extra_data
+ Добавить хуки в платежи, чтоб можно было автоматически продлевать услугу абоненту сразу после оплаты
- логировать действия сотрудников с устройствами
+ Поправить конфликт ip аренд. Когда ip занят выключенной или какой-то не активной учёткой,
  а по dhcp приходит что его нужно добавить на другую учётку то нужно переносить этот ip,
  а не говорить что он занят.
- PPPOE для невозможных статиков
- Снятие средств логировать так: сколько было, на сколько изменили, сколько стало
+ Нужно логировать получение ip абонентами, запоминать кто в какое время каким ip пользовался
+ JSONField обновить этот тип поля
- Сделать пароль изменяемым в ЛК
- Идея для Django: для поля datetime сделать автоматический триггер для времени последнего обновления
- Идея для Django: При сохранении модели генерировать поля которые изменились и обновлять только их
- Переработать логи по абоненту. Те текстовые что есть полная херь. Ну и логи по множеству
  действий можно делать по триггеру из бд
- Сделать отдельный модуль, занимающийся оповещениями
- Сделать валидатор для абонентских паролей
+ Сделать доступ к отчётам и доменам по правам.
- Перечитать все sql и изучить каждую конструкцию. Кажется что там много лишнего
+ Добавить в лог использования ip абонентов время окончания использования этого ip.
+ Какой-то косяк, когда на учётке на свиче не назначен конкретный порт, то ip прикрепляются на первую попавшуюся учётку.
- Выпилить приложение sites, т.е. сделать чтоб оно было выпиливаемым, чтобы система могла работать без него, но с ним
  просто добавлялся новый функционал.
+ Сделать чтоб получение ip сразу отображалось на странице абонента.
- Ломается устройство без указанного типа
+ Не удалять ip адрес с учётки, по крайней мере статический, при освобождении сессии, а то назначенный белый ip пропадает
+ Оптимизация: Научится выключать sites для некоторых viewsets. Иногда, в высоконагруженных ручках сайты не
  нужны, а это лишнее обращение в БД.
  Сайты кешируются, в вопросе производительности нет лишнего запроса в бд.


+ При удалении ip не освобождается сессия.
+ CustomerIpLeaseModel накапливаются, сессий нет, а ip висят. Удалять просроченные ip.

- apps/radiusapp/migrations/0002_auto_20210219_2055.sql Сделать для fetch_subscriber_lease
  блокировки. А то при нагрузке, для абонентов выделяются одинаковые ip.

- Платёжная система РНКБ
- Сессии попадают на учётки других абонентов, и у одной учётки 2 сессии, у другой их нет, списание денег одно,
  а используют услугу 2е.
