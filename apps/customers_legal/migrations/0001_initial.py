# Generated by Django 3.1.12 on 2021-10-18 15:16

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djing2.models
import dynamicfields.models
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('addresses', '0001_initial'),
        ('profiles', '0005_auto_20210204_2043'),
        ('customers', '0015_change_street'),
        ('groupapp', '0002_group_sites'),
        ('dynamicfields', '0002_tags_20210908_1318'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerLegalModel',
            fields=[
                ('baseaccount_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='profiles.baseaccount')),
                ('balance', models.FloatField(default=0.0)),
                ('post_index', models.CharField(blank=True, default=None, help_text='почтовый индекс юридического адреса абонента', max_length=32, null=True, verbose_name='Post number')),
                ('delivery_address_post_index', models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='Delivery address post index')),
                ('post_post_index', models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='Post number')),
                ('legal_type', models.PositiveSmallIntegerField(choices=[(0, 'Not chosen'), (1, 'Legal customer'), (2, 'Individual businessman'), (3, 'Self employed')], default=0, verbose_name='Legal type')),
                ('tax_number', models.CharField(max_length=32, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^-?\\d+\\Z'), code='invalid', message='Enter a valid integer.')], verbose_name='Tax number')),
                ('state_level_reg_number', models.CharField(max_length=64, verbose_name='State-level registration number')),
                ('actual_start_time', models.DateTimeField(help_text='дата начала интервала, на котором актуальна информация', verbose_name='Actual start time')),
                ('actual_end_time', models.DateTimeField(blank=True, default=None, help_text='дата окончания интервала, на котором актуальна информация', null=True, verbose_name='Actual end time')),
                ('title', models.CharField(max_length=256, unique=True, verbose_name='Title')),
                ('description', models.TextField(blank=True, default=None, null=True, verbose_name='Comment')),
                ('address', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='legal_customer', to='addresses.addressmodel', verbose_name='Legal address')),
                ('branches', models.ManyToManyField(blank=True, to='customers.Customer', verbose_name='Branches')),
                ('delivery_address', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='delivery_customer_legal', to='addresses.addressmodel', verbose_name='Delivery address')),
                ('group', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='groupapp.group', verbose_name='Legal customer group')),
                ('post_address', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='post_customer_legal', to='addresses.addressmodel', verbose_name='Address')),
            ],
            options={
                'db_table': 'customers_legal',
            },
            bases=('profiles.baseaccount',),
        ),
        migrations.CreateModel(
            name='LegalCustomerBankModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Название банка', max_length=64, verbose_name='Title')),
                ('number', models.CharField(max_length=64, verbose_name='Bank account number')),
                ('bank_code', models.CharField(max_length=64, verbose_name='Bank identify code')),
                ('correspondent_account', models.CharField(max_length=64, verbose_name='Correspondent account')),
                ('settlement_account', models.CharField(max_length=64, verbose_name='Settlement account')),
                ('legal_customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='customers_legal.customerlegalmodel')),
            ],
            options={
                'db_table': 'customer_legal_bank',
            },
            bases=(djing2.models.BaseAbstractModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CustomerLegalTelephoneModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telephone', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator('^(\\+[7893]\\d{10,11})?$')], verbose_name='Telephone')),
                ('owner_name', models.CharField(max_length=127)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('last_change_time', models.DateTimeField(blank=True, null=True)),
                ('legal_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers_legal.customerlegalmodel')),
            ],
            options={
                'db_table': 'customer_legal_additional_telephones',
            },
            bases=(djing2.models.BaseAbstractModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CustomerLegalDynamicFieldContentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', dynamicfields.models._DynamicField(blank=True, max_length=512, null=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dynamicfields.fieldmodel')),
                ('legal_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers_legal.customerlegalmodel')),
            ],
            options={
                'db_table': 'customers_legal_dynamic_content',
            },
        ),
    ]
