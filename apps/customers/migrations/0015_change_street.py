# Generated by Django 3.1.12 on 2021-09-15 11:17

from django.db import migrations, models
from bitfield import BitField


class Migration(migrations.Migration):

    dependencies = [
        ('addresses', '0001_initial'),
        ('customers', '0014_fetch_customers_by_not_activity_sql_procedure'),
    ]

    operations = [
        migrations.AddField(
            model_name='customer',
            name='address',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=models.deletion.SET_NULL,
                                    to='addresses.addressmodel'),
        ),
        migrations.RunSQL(
            # Attach customers to address streets
            sql=(
                "UPDATE customers "
                "SET address_id = ("
                    "SELECT adrs.id "
                        "FROM customers c "
                            "LEFT JOIN customer_street cs ON cs.id = c.street_id "
                            "LEFT JOIN addresses adrs ON ("
                                "adrs.parent_addr_id = cs.group_id "
                                "AND adrs.title = cs.name"
                            ") "
                            "WHERE c.baseaccount_ptr_id = customers.baseaccount_ptr_id"
                    ")"
            )
        ),
        migrations.RemoveField(
            model_name='customer',
            name='street'
        ),


        migrations.AlterModelOptions(
            name='additionaltelephone',
            options={'verbose_name': 'Additional telephone', 'verbose_name_plural': 'Additional telephones'},
        ),
        migrations.AlterModelOptions(
            name='customer',
            options={
                'permissions': [
                    ('can_buy_service', 'Buy service perm'),
                    ('can_add_balance', 'fill account'),
                    ('can_add_negative_balance', 'Fill account balance on negative cost'),
                    ('can_ping', 'Can ping'),
                    ('can_complete_service', 'Can complete service'),
                    ('can_view_activity_report', 'Can view activity_report'),
                    ('can_view_service_type_report', 'Can view service type report')
                ],
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers'
            },
        ),
        migrations.AlterModelOptions(
            name='customerattachment',
            options={},
        ),
        migrations.AlterModelOptions(
            name='customerlog',
            options={},
        ),
        migrations.AlterModelOptions(
            name='customerservice',
            options={
                'verbose_name': 'Customer service',
                'verbose_name_plural': 'Customer services'
            },
        ),
        migrations.AlterModelOptions(
            name='customerstreet',
            options={
                'verbose_name': 'Street',
                'verbose_name_plural': 'Streets'
            },
        ),
        migrations.AlterModelOptions(
            name='invoiceforpayment',
            options={
                'verbose_name': 'Debt',
                'verbose_name_plural': 'Debts'
            },
        ),
        migrations.AlterModelOptions(
            name='passportinfo',
            options={
                'verbose_name': 'Passport Info',
                'verbose_name_plural': 'Passport Info'
            },
        ),
        migrations.AlterModelOptions(
            name='periodicpayforid',
            options={},
        ),
        migrations.AlterField(
            model_name='customer',
            name='markers',
            field=BitField(
                (
                    ('icon_donkey', 'Donkey'),
                    ('icon_fire', 'Fire'),
                    ('icon_ok', 'Ok'),
                    ('icon_king', 'King'),
                    ('icon_tv', 'TV'),
                    ('icon_smile', 'Smile'),
                    ('icon_dollar', 'Dollar'),
                    ('icon_service', 'Service'),
                    ('icon_mrk', 'Marker'),
                    ('icon_red_tel', 'Red phone'),
                    ('icon_green_tel', 'Green phone')
                ),
                default=0
            ),
        ),
        migrations.AlterField(
            model_name='customerdynamicfieldcontentmodel',
            name='field',
            field=models.ForeignKey(on_delete=models.deletion.CASCADE, related_name='+', to='dynamicfields.fieldmodel'),
        ),
    ]
